<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用GitHub + Hexo搭建个人博客]]></title>
    <url>%2F2017%2F06%2F16%2FUseGitHub-HexoSetUpYouSelfBlog%2F</url>
    <content type="text"><![CDATA[生活是一面镜子。你对它笑，它就对你笑；你对它哭，它也对你哭。某名人-_-# 琢磨了一天终于一脸懵逼地用Hexo把新博客搭建起来了,在这里分享一下搭建的过程和遇到的一些问题接下来就是showTime 据本人了解Hexo原理是通过node.js把 Markdown格式的文本转化为静态页面,通过git上传到自己的GitHub pages项目上面 首先安装环境 1 .安装node.js (用于生成静态页面) 前往node.js官网下载对应pc的版本进行安装 2 .安装Git (用来push文件到GitHub) 同理上官网下载对应版本进行安装 3 .注册GitHub账号并创建仓库 你懂得 接下来进行Hexo的安装在磁盘创建文件夹用来存放生成的博客文件 进入文件夹Shift + 鼠标右键选择在此处打开cmd(此处省略若干cmd代码) 输入如下代码进行Hexo安装 npm install -g hexo 成功后进行初始化输入如下代码 Hexo init 初始化完成后博客文件就生成到创建的文件夹中Hexo安装完成 编译静态页面 hexo g 启动本地服务进行调试,或者进入debug模式 hexo s hexo s –debug(调试模式) 如果没有报错并且访问http://localhost:4000成功则大功告成了 一半!]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分类测试]]></title>
    <url>%2F2017%2F06%2F16%2Fcategories-test%2F</url>
    <content type="text"><![CDATA[这是一篇分类测试文章]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>Testing</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test tags]]></title>
    <url>%2F2017%2F06%2F16%2Ftest-tags%2F</url>
    <content type="text"></content>
      <tags>
        <tag>Testing</tag>
        <tag>Another Tag</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F06%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>